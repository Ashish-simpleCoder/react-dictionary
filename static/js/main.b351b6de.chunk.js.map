{"version":3,"sources":["Api/api.js","Api/list.js","components/Dictionary.jsx","components/Header.jsx","App.jsx","index.js"],"names":["dictionaryApi","lan","word","categories","value","label","Dictionary","setLan","setWord","styles","createStyles","Container","maxWidth","className","container","TextField","color","onChange","e","debounce","target","handleDebounce","search","select","handleChange","mode","map","cat","MenuItem","makeStyles","marginTop","display","marginRight","flex","width","search_key","fontSize","Header","settoggleDark","toggleDark","createStyle","AppBar","header","position","Toolbar","Typography","variant","title","Button","button","onClick","changeTheme","flexDirection","height","alignItems","fontWeight","Definitions","lazy","App","useState","meanings","setMeanings","useEffect","wordMeaning","ThemeProvider","theme","darkTheme","x","style","background","fallback","a","axios","get","data","padding","minHeight","paddingBottom","createTheme","palette","type","primary","main","secondary","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b351b6de.chunk.js","sourcesContent":["export default function dictionaryApi(lan,word){\r\n    return `https://api.dictionaryapi.dev/api/v2/entries/${lan}/${word}`\r\n}","const categories = [\r\n    { value: \"English\", label: \"en\" },\r\n    { value: \"Hindi\", label: \"hi\" },\r\n    { value: \"Spanish\", label: \"es\" },\r\n    { value: \"French\", label: \"fr\" },\r\n    { value: \"Japanese\", label: \"ja\" },\r\n    { value: \"Russian\", label: \"ru\" },\r\n    { value: \"German\", label: \"de\" },\r\n    { value: \"Italian\", label: \"it\" },\r\n    { value: \"Korean\", label: \"ko\" },\r\n    { value: \"Brazilian Portuguese\", label: \"pt-BR\" },\r\n    { value: \"Arabic\", label: \"ar\" },\r\n    { value: \"Turkish\", label: \"tr\" },\r\n  ];\r\n\r\n  export default categories;","import { Container, makeStyles, MenuItem, TextField } from \"@material-ui/core\";\r\nimport categories from \"../Api/list\";\r\nimport { debounce } from \"lodash\";\r\n\r\n\r\nexport default function Dictionary({lan, setLan, setWord}){\r\n    const styles = createStyles()\r\n\r\n    function handleChange(e){\r\n        setLan(e.target.value)\r\n        setWord('')\r\n    }\r\n    function handleDebounce(e){\r\n        (debounce(()=>setWord(e.target.value),1200))()\r\n    }\r\n\r\n    return(\r\n        <Container maxWidth='lg'  className={styles.container}>\r\n            <TextField label='type a word' color='secondary' onChange={(e)=>handleDebounce(e)} className={styles.search}/>\r\n\r\n            <TextField label='select' select value={lan} onChange={(e)=>handleChange(e)} className={styles.mode}>\r\n                { categories.map(cat=>(<MenuItem key={cat.label} value={cat.label}>{cat.value}</MenuItem>)) }\r\n            </TextField>\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst createStyles = makeStyles(()=>({\r\n    container:{\r\n        marginTop:'3rem',\r\n        display:'flex'\r\n    },\r\n    search:{\r\n        marginRight:'1rem',\r\n        flex:'1'\r\n    },\r\n    mode:{\r\n        width:'clamp(6rem,7rem,7vw)'\r\n    },\r\n    search_key:{\r\n        marginTop:'2rem',\r\n        fontSize:'clamp(1.6rem,1.7rem,1.7vw)'\r\n    }\r\n}))","import { AppBar, Button, Container, Toolbar, Typography } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/styles\"\r\n\r\nexport default function Header({settoggleDark, toggleDark}){\r\n    function changeTheme(settoggleDark){\r\n        settoggleDark(!toggleDark)\r\n    }\r\n\r\n    const styles = createStyle()\r\n\r\n    return(\r\n        <AppBar className={styles.header} position='static'>\r\n            <Container>\r\n                <Toolbar>\r\n                    <Typography variant='h5' className={styles.title} >Dictionary</Typography>\r\n\r\n                    <Button\r\n                        variant='outlined'\r\n                        className={styles.button}\r\n                        onClick={()=>changeTheme(settoggleDark)}\r\n                    >\r\n                        {toggleDark ? 'Light Moment' : 'Dark Moment'}\r\n                    </Button>\r\n                </Toolbar>\r\n            </Container>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\n\r\nconst createStyle = makeStyles(()=>({\r\n    header:{\r\n        width:'100%',\r\n        flexDirection:'row',\r\n        height:'4rem',\r\n        alignItems:'center',\r\n    },\r\n    title:{\r\n        flex:1,\r\n        fontWeight:'100 !important'\r\n    },\r\n    button:{\r\n        height:'2rem',\r\n        width:'10rem'\r\n    }\r\n}))","import {lazy, Suspense} from 'react'\r\nimport { Container, createTheme, Typography } from \"@material-ui/core\"\r\nimport { makeStyles, ThemeProvider } from \"@material-ui/styles\"\r\nimport axios from \"axios\"\r\nimport { useEffect, useState } from \"react\"\r\nimport dictionaryApi from \"./Api/api\"\r\nimport Dictionary from \"./components/Dictionary\"\r\nimport Header from \"./components/Header\"\r\nimport \"./styles/index.css\"\r\n\r\nconst Definitions = lazy(()=>import(\"./components/Definitions\"))\r\n\r\nexport default function App(){\r\n    const [toggleDark, settoggleDark] = useState(false);\r\n\r\n    const [meanings, setMeanings] = useState([])\r\n    const [word, setWord] = useState('')\r\n    const [lan, setLan] = useState('en')\r\n\r\n    useEffect(()=>wordMeaning(lan,word,setMeanings),[word,lan])\r\n\r\n    const styles = createStyles()\r\n\r\n    return(\r\n        <>\r\n        <ThemeProvider theme={darkTheme(toggleDark)}>\r\n            <div  className={styles.x} style={{width:'100%',background:toggleDark? '#102020' : '#fff'}}>\r\n                <Container className={styles.container}>\r\n                    <Header settoggleDark={settoggleDark} toggleDark={toggleDark}/>\r\n\r\n                    <Dictionary lan={lan} setLan={setLan} word={word} setWord={setWord}/>\r\n\r\n                    { meanings && <Suspense fallback={<h1>loading...</h1>}><Definitions meanings={meanings} word={word} lan={lan}/></Suspense> }\r\n\r\n                    { !meanings && <Typography variant='h3'>no result found.</Typography>}\r\n                </Container>\r\n\r\n            </div>\r\n        </ThemeProvider>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nasync function wordMeaning(lan, word, setMeanings){\r\n    try{\r\n        if(!lan || !word) return\r\n        const {data} = await axios.get(dictionaryApi(lan, word))\r\n        if(!data) return setMeanings('')\r\n        setMeanings(data)\r\n    }catch(e){\r\n        setMeanings('')\r\n    }\r\n}\r\n\r\n\r\nconst createStyles = makeStyles(()=>({\r\n    container:{\r\n        width:'100% !important',\r\n        maxWidth:'100% !important',\r\n        padding:0,\r\n    },\r\n    x:{\r\n        minHeight:'100vh',\r\n        paddingBottom:'3rem'\r\n    }\r\n}))\r\n\r\nfunction darkTheme(toggleDark){\r\n    return(\r\n        createTheme({\r\n            palette:{\r\n                type: toggleDark ? 'dark' : 'light',\r\n                primary:{\r\n                    main:toggleDark ? '#102030' : '#fff',\r\n                },\r\n                secondary: {\r\n                    main:toggleDark ? '#fff' : '#101317'\r\n                },\r\n                button:{\r\n                    main: toggleDark ? '#fff' : '#000'\r\n                }\r\n            }\r\n        })\r\n    )\r\n}","import ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'))\r\n"],"sourceRoot":""}