{"version":3,"sources":["Api/api.js","components/Definitions.jsx","Api/list.js","components/Dictionary.jsx","components/Header.jsx","App.jsx","index.js"],"names":["dictionaryApi","lan","word","Definitions","meanings","styles","createStyles","Container","className","container","phonetics","Audio","audio","map","mean","item","definitions","def","index","Output","CustomTypo","Typography","variant","color","style","textAlign","fontWeight","padding","definition","example","src","controls","makeStyles","marginTop","categories","value","label","Dictionary","setLan","setWord","maxWidth","TextField","onChange","e","target","search","select","handleChange","mode","cat","MenuItem","display","marginRight","flex","width","search_key","fontSize","Header","settoggleDark","toggleDark","createStyle","AppBar","header","position","Toolbar","title","Button","button","onClick","changeTheme","flexDirection","height","alignItems","App","useState","setMeanings","useEffect","wordMeaning","darkTheme","createTheme","palette","type","primary","main","secondary","ThemeProvider","theme","x","background","a","axios","get","data","console","log","minHeight","paddingBottom","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1e08a5f.chunk.js","sourcesContent":["export default function dictionaryApi(lan,word){\r\n    return `https://api.dictionaryapi.dev/api/v2/entries/${lan}/${word}`\r\n}","import { Container, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default function Definitions({meanings, word, lan}){\r\n    const styles = createStyles()\r\n\r\n    return(\r\n        <Container className={styles.container}>\r\n            { meanings[0] && meanings[0].phonetics[0] && word && lan==='en' &&  <Audio audio={meanings[0].phonetics[0].audio}/> }\r\n            {word === '' ? <CustomTypo/> : meanings.map(mean=>mean.meanings.map(item=>item.definitions.map((def,index)=><Output key={index} def={def} />)))}\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nconst CustomTypo = () => <Typography variant='h5' color='secondary' style={{textAlign:'center',fontWeight:'100'}}>Just type in search-box to search meanings</Typography>\r\n\r\n// const Output = (def) => (<div>\r\n//                             <b>{def.definition}</b>\r\n//                             <hr/>\r\n//                             {\r\n//                                 def.example && <b>def.example</b>\r\n//                             }\r\n//                         </div>)\r\n\r\n\r\nfunction Output(def){\r\n    return(\r\n        <div >\r\n            <Typography color='secondary' style={{padding:'1rem 0'}}>{def.def.definition}</Typography>\r\n            {\r\n                def.def.example && <Typography color='secondary'  style={{padding:'0 0 1rem 0'}}>Example : {def.def.example}</Typography>\r\n            }\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Audio({audio}){\r\n\r\n    return (\r\n        <audio src={audio} controls>your borswer does not support audio</audio>\r\n    )\r\n}\r\n\r\nconst createStyles = makeStyles(()=>({\r\n    container:{\r\n        marginTop:'2rem'\r\n    }\r\n}))\r\n","const categories = [\r\n    { value: \"English\", label: \"en\" },\r\n    { value: \"Hindi\", label: \"hi\" },\r\n    { value: \"Spanish\", label: \"es\" },\r\n    { value: \"French\", label: \"fr\" },\r\n    { value: \"Japanese\", label: \"ja\" },\r\n    { value: \"Russian\", label: \"ru\" },\r\n    { value: \"German\", label: \"de\" },\r\n    { value: \"Italian\", label: \"it\" },\r\n    { value: \"Korean\", label: \"ko\" },\r\n    { value: \"Brazilian Portuguese\", label: \"pt-BR\" },\r\n    { value: \"Arabic\", label: \"ar\" },\r\n    { value: \"Turkish\", label: \"tr\" },\r\n  ];\r\n\r\n  export default categories;","import { Container, createTheme, makeStyles, MenuItem, TextField, Typography } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport categories from \"../Api/list\";\r\n\r\nexport default function Dictionary({lan, setLan, word, setWord}){\r\n\r\n    const styles = createStyles()\r\n\r\n    function handleChange(e){\r\n        setLan(e.target.value)\r\n        setWord('')\r\n    }\r\n\r\n    return(\r\n        <Container maxWidth='lg'  className={styles.container}>\r\n            <TextField label='type a word' color='secondary' value={word} onChange={(e)=>setWord(e.target.value)} className={styles.search}/>\r\n\r\n            <TextField label='select' select value={lan} onChange={(e)=>handleChange(e)} className={styles.mode}>\r\n                { categories.map(cat=>(<MenuItem key={cat.label} value={cat.label}>{cat.value}</MenuItem>)) }\r\n            </TextField>\r\n\r\n            {/* <Typography color='secondary' className={styles.search_key}>{word}</Typography> */}\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst createStyles = makeStyles(()=>({\r\n    container:{\r\n        // textAlign:'center',\r\n        marginTop:'3rem',\r\n        display:'flex'\r\n    },\r\n    search:{\r\n        marginRight:'1rem',\r\n        // width:'100%'\r\n        flex:'1'\r\n    },\r\n    mode:{\r\n        width:'clamp(6rem,7rem,7vw)'\r\n    },\r\n    search_key:{\r\n        // textAlign:'left',\r\n        marginTop:'2rem',\r\n        fontSize:'clamp(1.6rem,1.7rem,1.7vw)'\r\n    }\r\n}))","import { AppBar, Button, Container, Toolbar, Typography } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/styles\"\r\n\r\nexport default function Header({settoggleDark, toggleDark}){\r\n    function changeTheme(settoggleDark){\r\n        settoggleDark(!toggleDark)\r\n    }\r\n\r\n    const styles = createStyle()\r\n\r\n    return(\r\n        <AppBar className={styles.header} position='static'>\r\n            <Container>\r\n                <Toolbar>\r\n                    <Typography variant='h3' className={styles.title} >Dictionary</Typography>\r\n                    <Button variant='outlined' className={styles.button} onClick={()=>changeTheme(settoggleDark)}>Dark</Button>\r\n                </Toolbar>\r\n            </Container>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\n\r\nconst createStyle = makeStyles(()=>({\r\n    header:{\r\n        width:'100%',\r\n        flexDirection:'row',\r\n        height:'5rem',\r\n        alignItems:'center',\r\n    },\r\n    title:{\r\n        flex:1,\r\n        fontWeight:'200'\r\n    },\r\n    button:{\r\n        height:'2rem'\r\n    }\r\n}))\r\nconst styles={\r\n    fontSize:'clamp(3rem,4rem,4vw)',\r\n    // textAlign:'center',\r\n    fontWeight:'300',\r\n    // color:'rgb(0,0,200)'\r\n}","import { Container, createTheme } from \"@material-ui/core\"\r\nimport { makeStyles, ThemeProvider } from \"@material-ui/styles\"\r\nimport axios from \"axios\"\r\nimport { useEffect, useState } from \"react\"\r\nimport dictionaryApi from \"./Api/api\"\r\nimport Definitions from \"./components/Definitions\"\r\nimport Dictionary from \"./components/Dictionary\"\r\nimport Header from \"./components/Header\"\r\nimport \"./styles/index.css\"\r\n\r\nexport default function App(){\r\n    const [toggleDark, settoggleDark] = useState(true);\r\n\r\n    const [meanings, setMeanings] = useState([])\r\n    const [word, setWord] = useState('')\r\n    const [lan, setLan] = useState('en')\r\n\r\n    useEffect(()=>wordMeaning(lan,word,setMeanings),[word,lan])\r\n    // console.log(toggleDark)\r\n\r\n    const darkTheme = createTheme({\r\n        palette:{\r\n            type: toggleDark ? 'dark' : 'light',\r\n            primary:{\r\n                main:toggleDark ? '#101517' : '#fff',\r\n            },\r\n            secondary: {\r\n                main:toggleDark ? '#fff' : '#101317'\r\n            },\r\n            button:{\r\n                main: toggleDark ? '#fff' : '#000'\r\n            }\r\n          }\r\n        })\r\n\r\n    const styles = createStyles()\r\n\r\n    return(\r\n        <>\r\n        <ThemeProvider theme={darkTheme}>\r\n            <div  className={styles.x} style={{width:'100%',background:toggleDark? '#101317' : '#fff'}}>\r\n                <Container className={styles.container}>\r\n                    <Header settoggleDark={settoggleDark} toggleDark={toggleDark}/>\r\n                    <Dictionary lan={lan} setLan={setLan} word={word} setWord={setWord}/>\r\n                    { meanings && <Definitions meanings={meanings} word={word} lan={lan}/> }\r\n                </Container>\r\n            </div>\r\n        </ThemeProvider>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nasync function wordMeaning(lan = 'en', word = 'man', setMeanings){\r\n    try{\r\n        const {data} = await axios.get(dictionaryApi(lan, word))\r\n        setMeanings(data)\r\n    }catch(e){\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nconst createStyles = makeStyles(()=>({\r\n    container:{\r\n        width:'100% !important',\r\n        maxWidth:'100% !important',\r\n        padding:0,\r\n    },\r\n    x:{\r\n        minHeight:'100vh',\r\n        paddingBottom:'3rem'\r\n    }\r\n}))","import ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'))"],"sourceRoot":""}